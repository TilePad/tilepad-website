---
import { Image } from "astro:assets";
import { LinkButton } from "@astrojs/starlight/components";

const { data } = Astro.locals.starlightRoute.entry;
const { title = data.title, tagline, image, actions = [] } = data.hero || {};

import logoSrc from "../assets/tilepad-logo.svg";
import lightLogoSrc from "../assets/tilepad-logo-black.svg";
import previewSrc from "../assets/showcase.png";
import DeepLinkRedirect from "./DeepLinkRedirect.astro";
---

<DeepLinkRedirect />

<div class="hero">
    <Image
        class="hero-preview"
        src={previewSrc}
        width={700}
        height={400}
        alt="Preview"
    />

    <div class="sl-flex stack">
        <div class="sl-flex copy">
            <Image
                class="dark-only"
                src={logoSrc}
                height={80}
                alt="Tilepad Logo"
            />
            <Image
                class="light-only"
                src={lightLogoSrc}
                height={80}
                alt="Tilepad Logo"
            />

            {tagline && <div id="tagline" class="tagline" set:html={tagline} />}
        </div>

        {
            actions.length > 0 && (
                <div class="sl-flex actions">
                    {actions.map(
                        ({
                            attrs: { class: className, ...attrs } = {},
                            icon,
                            link: href,
                            text,
                            variant,
                        }) => (
                            <LinkButton
                                {href}
                                {variant}
                                icon={icon?.name}
                                class:list={[className]}
                                {...attrs}
                            >
                                {text}
                                {icon?.html && (
                                    <Fragment set:html={icon.html} />
                                )}
                            </LinkButton>
                        ),
                    )}
                </div>
            )
        }
    </div>
</div>

<style>
    @layer starlight.core {
        :root[data-theme="light"] .dark-only,
        :root[data-theme="dark"] .light-only {
            display: none;
        }

        :root[data-theme="light"] .light-only,
        :root[data-theme="dark"] .dark-only {
            display: block;
        }

        .hero {
            display: grid;
            align-items: center;
            gap: 1rem;
            padding-bottom: 1rem;
        }

        .hero-preview {
            transform: perspective(1000px) rotateY(-15deg);
        }

        .hero > img,
        .hero > .hero-html {
            object-fit: contain;
            width: min(70%, 20rem);
            height: auto;
            margin-inline: auto;
        }

        .stack {
            flex-direction: column;
            gap: clamp(1.5rem, calc(1.5rem + 1vw), 2rem);
            text-align: center;
        }

        .copy {
            flex-direction: column;
            gap: 1rem;
            align-items: center;
        }

        .copy > * {
            max-width: 50ch;
        }

        h1 {
            font-size: clamp(
                var(--sl-text-3xl),
                calc(0.25rem + 5vw),
                var(--sl-text-6xl)
            );
            line-height: var(--sl-line-height-headings);
            font-weight: 600;
            color: var(--sl-color-white);
        }

        .tagline {
            font-size: clamp(
                var(--sl-text-base),
                calc(0.0625rem + 2vw),
                var(--sl-text-xl)
            );
            color: var(--sl-color-gray-2);
        }

        .actions {
            gap: 1rem;
            flex-wrap: wrap;
            justify-content: center;
        }

        @media (min-width: 50rem) {
            .hero {
                grid-template-columns: 7fr 5fr;
                gap: 3%;
                padding-block: clamp(2.5rem, calc(1rem + 10vmin), 10rem);
            }

            .hero > img,
            .hero > .hero-html {
                order: 2;
                width: min(100%, 35rem);
            }

            .hero-preview {
                width: min(100%, 50rem) !important;
            }

            .stack {
                text-align: start;
            }

            .copy {
                align-items: flex-start;
            }

            .actions {
                justify-content: flex-start;
            }
        }
    }
</style>
